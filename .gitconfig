[http]
    sslVerify = false

[user]
    name = Romain Chossart
    email = romainchossart@gmail.com

[core]
    excludesfile = ~/.gitexclude
    trustctime = false
    hooksPath = ~/.githooks

[color]
    ui = auto
[color "branch"]
    current = blue reverse
    local = blue
    remote = yellow
[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red bold
    new = green bold
    whitespace = red reverse
[color "status"]
    added = yellow
    changed = green
    untracked = cyan

[alias]
    st = status
    ci = commit
    ciam = commit --amend
    br = branch
    co = checkout
    rb = rebase
    di = diff
    dif = diff
    difca = diff --cached
    sub = submodule
    cpi = cherry-pick

    # A nice list of branches with dates
    brs = !git for-each-ref --sort=-committerdate refs/heads/ \
        --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset)|%(objectname:short)|%(color:green)%(committerdate:relative)%(color:reset)' \
        | column -ts '|'

    out = !git fetch && git log FETCH_HEAD
    in  = !git fetch && git log ..FETCH_HEAD

    # To make sure you don commit a given file:
    # git assume passwords.txt
    # # Do whatever (including commit/push)
    # git status
    # # List the 'assumed-unchanged' files
    # git assumed
    # git unassume passwords.txt
    assume   = update-index --assume-unchanged
    unassume = update-index --no-assume-unchanged
    assumed  = "!git ls-files -v | grep ^h | cut -c 3-"

    # Snapshot without changing working tree
    snapshot = git stash save "snapshot: $(date)" || git stash apply "stash@{0}"

    # Tip: use git diff --patience (or git pull/merge -s patience) when there
    # is a lot of repeated lines (see
    # http://blog.apiaxle.com/post/handy-git-tips-to-stop-you-getting-fired/)

    lol = log --graph --decorate --pretty=oneline --abbrev-commit
    lola = log --graph --decorate --pretty=oneline --abbrev-commit --all

[credential]
	helper = osxkeychain
[rerere]
	enabled = true
[push]
	default = simple

[merge "ours"]
	driver = true

[merge "theirs"]
	driver = mv %B %A

[merge "conflict"]
	driver = false
[rebase]
	autosquash = true

# To apply a conf to a subset of repos (super useful)
#
# [includeIf "gitdir:~/somedirectory/"]
#       path = .gitconfig-blahblah
